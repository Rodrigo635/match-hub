# Configurações padrão (ativas quando nenhum perfil está especificado)
logging:
  level:
    com.match_hub.backend_match_hub.infra.notifications: DEBUG
    com.match_hub.backend_match_hub.services: DEBUG

api:
  security:
    token:
      secret: ${JWT_SECRET:my-secret}
      expiration: ${JWT_TIME:2}

app:
  upload:
    ipv4: ${SPRING_IPV4:127.0.0.1}
    dir: "${user.home}/uploads"
    base-url: "http://localhost:8080/uploads"

server:
  error:
    include-stacktrace: never

spring:
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  mail:
    host: ${SPRING_EMAIL_HOST:smtp.gmail.com}
    port: ${SPRING_EMAIL_PORT:587}
    username: ${SPRING_EMAIL:smtp@gmail.com}
    password: ${SPRING_EMAIL_PASSWORD:password}
    expiration_hours: ${PASSWORD_EXPIRE_HOURS:24}
    frontend:
      link: ${SPRING_FRONTEND_LINK:localhost:3000}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000


  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile,email
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

---

# Configurações compartilhadas entre os perfis 'dev'
spring:
  config:
    activate:
      on-profile: [ dev ]  # Ativa em ambos os perfis
  application:
    name: backend-match-hub-dev

  # DEVTOOLS
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true

  # TEST DATASOURCE
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ""

  jpa:
    hibernate:
      ddl-auto: create
    database-platform: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true
    show-sql: false
    properties:
      hibernate:
        format_sql: true

  # H2 CLIENT
  h2:
    console:
      enabled: true
      path: /h2-console

  flyway:
    enabled: false

---

spring:
  config:
    activate:
      on-profile: [ prod ]
  datasource:
    url: ${SPRINGBD_URL}
    username: ${SPRINGDB_USER}
    password: ${SPRINGDB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
