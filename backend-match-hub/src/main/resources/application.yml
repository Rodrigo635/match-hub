api:
  security:
    token:
      secret: "MatchHub"

app:
  upload:
    dir: "${user.home}/uploads"
    base-url: "http://localhost:8080/uploads"


server:
  error:
    include-stacktrace: never

# Configurações padrão (ativas quando nenhum perfil está especificado)

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile,email
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

---

# Configurações compartilhadas entre os perfis 'dev' e 'dev1'
spring:
  config:
    activate:
      on-profile: [dev, dev1]  # Ativa em ambos os perfis
  application:
    name: backend-match-hub-dev

  # DEVTOOLS
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true

  # TEST DATASOURCE
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ""

  jpa:
    hibernate:
      ddl-auto: create
    database-platform: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true
    show-sql: false
    properties:
      hibernate:
        format_sql: true

  # H2 CLIENT
  h2:
    console:
      enabled: true
      path: /h2-console

  flyway:
    enabled: false

# LOGGING (opcional, descomente se necessário)
# logging:
#   level:
#     org.springframework: DEBUG

---

spring:
  config:
    activate:
      on-profile: [ prod ]
  datasource:
    url: jdbc:postgresql://ep-wild-recipe-act8y5wy-pooler.sa-east-1.aws.neon.tech:5432/neondb?sslmode=require
    username: neondb_owner
    password: npg_ZrjK43nviBls
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
